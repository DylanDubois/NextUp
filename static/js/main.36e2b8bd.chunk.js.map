{"version":3,"sources":["containers/SongList/SongList.jsx","config/Fire.js","pages/Home/Home.jsx","App.js","serviceWorker.js","index.js","logo.svg"],"names":["songList","props","songs","Object","keys","reverse","map","songId","song","react_default","a","createElement","className","key","id","href","url","title","artist","poster","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","provider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","then","res","catch","signOut","console","log","Home","state","user","handleNameChange","event","_this","setState","target","value","handleEstimationChange","handleTasksChange","handleSubmit","preventDefault","submitSong","includes","Date","getTime","displayName","database","ref","update","alert","nextProps","this","next","prev","role","onClick","signIn","data-toggle","data-target","SongList_SongList","tabIndex","aria-labelledby","aria-hidden","type","data-dismiss","aria-label","aria-describedby","placeholder","onChange","Component","App","authListener","onAuthStateChanged","songsListener","on","snap","val","_this$state","pages_Home_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.36e2b8bd.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./SongList.scss\";\n\nconst songList = props => {\n  const songs = Object.keys(props.songs)\n    .reverse()\n    .map(songId => {\n      let song = props.songs[songId];\n      return (\n        <a\n          className=\"bg-dark row m-0 pt-2 text-left list-item text-primary\"\n          key={song.id}\n          href={song.url}\n        >\n          <div className=\"col-12\">\n            <h2 className=\"brand\">\n              {song.title} - {song.artist}\n            </h2>\n            <h5 className=\"header\">{song.poster}</h5>\n          </div>\n        </a>\n      );\n    });\n  return (\n    <div className=\"bg-dark max-height SongList\">\n      <div className=\"list\">{songs}</div>\n    </div>\n  );\n};\n\nexport default songList;\n","import firebase from \"firebase\";\n\nconst config = {\n  apiKey: \"AIzaSyBZgI1DfP9GVTwxajGox48qaYNH0aKk7k0\",\n  authDomain: \"nextup-15f4c.firebaseapp.com\",\n  databaseURL: \"https://nextup-15f4c.firebaseio.com\",\n  projectId: \"nextup-15f4c\",\n  storageBucket: \"nextup-15f4c.appspot.com\",\n  messagingSenderId: \"923940393576\"\n};\n\nconst fire = firebase.initializeApp(config);\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport const signInWithGoogle = () => {\n  firebase\n    .auth()\n    .signInWithPopup(provider)\n    .then(res => {})\n    .catch(res => {});\n};\n\nexport const signOut = () => {\n  firebase\n    .auth()\n    .signOut()\n    .then(res => console.log(res))\n    .catch(res => console.log(res));\n};\n\nexport default fire;\n","import React, { Component } from \"react\";\nimport SongList from \"../../containers/SongList/SongList\";\nimport fire from \"../../config/Fire\";\n\nclass Home extends Component {\n  state = {\n    songs: [],\n    title: \"\",\n    artist: \"\",\n    url: \"\",\n    poster: \"\",\n    user: null\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.state.user !== nextProps.user)\n      this.setState({ user: nextProps.user });\n    if (this.state.songs !== nextProps.songs)\n      this.setState({ songs: nextProps.songs });\n  }\n\n  componentDidUpdate(next, prev) {\n    if (prev.user !== next.user) this.setState({ user: next.user });\n  }\n\n  handleNameChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleEstimationChange = event => {\n    this.setState({ artist: event.target.value });\n  };\n\n  handleTasksChange = event => {\n    this.setState({ url: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  submitSong = () => {\n    if (!this.state.artist) {\n      alert(\"Must include artist name.\");\n      return;\n    }\n\n    if (!this.state.title) {\n      alert(\"Must include song title.\");\n      return;\n    }\n\n    if (!this.state.url.includes(\"www.youtube.com\")) {\n      alert(\"Must provide YouTube URL.\");\n      return;\n    }\n    const id = new Date().getTime() - 1550000000000;\n    const song = {\n      title: this.state.title,\n      artist: this.state.artist,\n      url: this.state.url,\n      poster: this.state.user.displayName,\n      id: id\n    };\n    this.setState({\n      title: \"\",\n      artist: \"\",\n      url: \"\"\n    });\n\n    const dbref = fire.database().ref(\"/songs/\" + id);\n    dbref.update(song);\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"jumbotron-fluid bg-primary text-primary p-5 text-left gradient border-bottom border-primary\">\n          <h1 className=\"display-2 brand ml-md-5 ml-sm-0\">NextUp</h1>\n          <h2 className=\"header ml-md-5 ml-sm-0\">Share. Like. Listen.</h2>\n          {!this.state.user && (\n            <p className=\"lead ml-md-5 ml-sm-0\">\n              <a\n                className=\"btn btn-outline-primary btn-lg mt-3 header\"\n                href=\"#\"\n                role=\"button\"\n                onClick={this.props.signIn}\n              >\n                Sign-In\n              </a>\n            </p>\n          )}\n          {this.state.user && (\n            <p className=\"lead ml-md-5 ml-sm-0\">\n              <a\n                className=\"btn btn-outline-primary btn-lg mt-3 header\"\n                href=\"#\"\n                role=\"button\"\n                data-toggle=\"modal\"\n                data-target=\"#exampleModal\"\n              >\n                Add Song\n              </a>\n              <a\n                className=\"btn btn-outline-primary btn-lg mt-3 ml-4 header\"\n                href=\"#\"\n                role=\"button\"\n                onClick={this.props.signOut}\n              >\n                Sign Out\n              </a>\n            </p>\n          )}\n        </div>\n        <SongList songs={this.state.songs} />\n\n        <div\n          className=\"modal fade\"\n          id=\"exampleModal\"\n          tabIndex=\"-1\"\n          role=\"dialog\"\n          aria-labelledby=\"exampleModalLabel\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content bg-dark\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title text-primary header\">Add Song</h5>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                >\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <form className=\"row\">\n                  <div className=\"form-group col-12\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"title\"\n                      aria-describedby=\"name\"\n                      placeholder=\"Song Name\"\n                      value={this.state.title}\n                      onChange={this.handleNameChange}\n                    />\n                  </div>\n                  <div className=\"form-group col-12\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"effort\"\n                      placeholder=\"Artist\"\n                      value={this.state.artist}\n                      onChange={this.handleEstimationChange}\n                    />\n                  </div>\n                  <div className=\"form-group col-12 m-0\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"task\"\n                      placeholder=\"YouTube URL\"\n                      value={this.state.url}\n                      onChange={this.handleTasksChange}\n                    />\n                  </div>\n                </form>\n              </div>\n              <div className=\"modal-footer\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-dark btn-outline-primary\"\n                  data-dismiss=\"modal\"\n                  onClick={this.submitSong}\n                >\n                  Add\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport Home from \"./pages/Home/Home\";\nimport fire, { signInWithGoogle, signOut } from \"./config/Fire\";\n\nclass App extends Component {\n  state = {\n    user: null,\n    songs: []\n  };\n\n  componentDidMount() {\n    this.authListener();\n    this.songsListener();\n  }\n\n  authListener = () => {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n      }\n    });\n  };\n\n  songsListener = () => {\n    const dbref = fire.database().ref(\"/songs/\");\n    dbref.on(\"value\", snap => {\n      console.log(snap.val());\n      this.setState({ songs: snap.val() });\n    });\n  };\n\n  render() {\n    let { user, songs } = this.state;\n    return (\n      <div className=\"App\">\n        <Home\n          signIn={signInWithGoogle}\n          signOut={signOut}\n          user={user}\n          songs={songs}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport $ from \"jquery\";\nimport Popper from \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}